// <auto-generated />

using Eve_Skynet.Bot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Eve_Skynet.Bot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    partial class BotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eve_Discord_Bot.Models.BlacklistedChannel", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("GuildId", "ChannelId");

                    b.ToTable("BlacklistedChannels");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.CustomCommand", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId", "Name");

                    b.ToTable("CustomCommands");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.ManagedRole", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("GuildId", "RoleId");

                    b.ToTable("ManagedRoles");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.ManagedUserRole", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("ManagedRoleGuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("ManagedRoleRoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Key");

                    b.HasIndex("ManagedRoleGuildId", "ManagedRoleRoleId");

                    b.ToTable("ManagedUserRoles");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.Roles.AdminRole", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId", "RoleId");

                    b.ToTable("AdminRoles");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.WelcomeMessage", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId");

                    b.ToTable("WelcomeMessages");
                });

            modelBuilder.Entity("Eve_Discord_Bot.Models.ManagedUserRole", b =>
                {
                    b.HasOne("Eve_Discord_Bot.Models.ManagedRole", "ManagedRole")
                        .WithMany()
                        .HasForeignKey("ManagedRoleGuildId", "ManagedRoleRoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
